[{"name":"Auto","description":"com.ujizin.camposer.state.FlashMode.Auto","location":"camposer/com.ujizin.camposer.state/-flash-mode/-auto/index.html","searchKeys":["Auto","Auto","com.ujizin.camposer.state.FlashMode.Auto"]},{"name":"Back","description":"com.ujizin.camposer.state.CamSelector.Back","location":"camposer/com.ujizin.camposer.state/-cam-selector/-back/index.html","searchKeys":["Back","Back","com.ujizin.camposer.state.CamSelector.Back"]},{"name":"BlockProducer","description":"com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy.BlockProducer","location":"camposer/com.ujizin.camposer.state/-image-analysis-backpressure-strategy/-block-producer/index.html","searchKeys":["BlockProducer","BlockProducer","com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy.BlockProducer"]},{"name":"Compatible","description":"com.ujizin.camposer.state.ImplementationMode.Compatible","location":"camposer/com.ujizin.camposer.state/-implementation-mode/-compatible/index.html","searchKeys":["Compatible","Compatible","com.ujizin.camposer.state.ImplementationMode.Compatible"]},{"name":"FillCenter","description":"com.ujizin.camposer.state.ScaleType.FillCenter","location":"camposer/com.ujizin.camposer.state/-scale-type/-fill-center/index.html","searchKeys":["FillCenter","FillCenter","com.ujizin.camposer.state.ScaleType.FillCenter"]},{"name":"FillEnd","description":"com.ujizin.camposer.state.ScaleType.FillEnd","location":"camposer/com.ujizin.camposer.state/-scale-type/-fill-end/index.html","searchKeys":["FillEnd","FillEnd","com.ujizin.camposer.state.ScaleType.FillEnd"]},{"name":"FillStart","description":"com.ujizin.camposer.state.ScaleType.FillStart","location":"camposer/com.ujizin.camposer.state/-scale-type/-fill-start/index.html","searchKeys":["FillStart","FillStart","com.ujizin.camposer.state.ScaleType.FillStart"]},{"name":"FitCenter","description":"com.ujizin.camposer.state.ScaleType.FitCenter","location":"camposer/com.ujizin.camposer.state/-scale-type/-fit-center/index.html","searchKeys":["FitCenter","FitCenter","com.ujizin.camposer.state.ScaleType.FitCenter"]},{"name":"FitEnd","description":"com.ujizin.camposer.state.ScaleType.FitEnd","location":"camposer/com.ujizin.camposer.state/-scale-type/-fit-end/index.html","searchKeys":["FitEnd","FitEnd","com.ujizin.camposer.state.ScaleType.FitEnd"]},{"name":"FitStart","description":"com.ujizin.camposer.state.ScaleType.FitStart","location":"camposer/com.ujizin.camposer.state/-scale-type/-fit-start/index.html","searchKeys":["FitStart","FitStart","com.ujizin.camposer.state.ScaleType.FitStart"]},{"name":"Front","description":"com.ujizin.camposer.state.CamSelector.Front","location":"camposer/com.ujizin.camposer.state/-cam-selector/-front/index.html","searchKeys":["Front","Front","com.ujizin.camposer.state.CamSelector.Front"]},{"name":"Image","description":"com.ujizin.camposer.state.CaptureMode.Image","location":"camposer/com.ujizin.camposer.state/-capture-mode/-image/index.html","searchKeys":["Image","Image","com.ujizin.camposer.state.CaptureMode.Image"]},{"name":"KeepOnlyLatest","description":"com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy.KeepOnlyLatest","location":"camposer/com.ujizin.camposer.state/-image-analysis-backpressure-strategy/-keep-only-latest/index.html","searchKeys":["KeepOnlyLatest","KeepOnlyLatest","com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy.KeepOnlyLatest"]},{"name":"MaxQuality","description":"com.ujizin.camposer.state.ImageCaptureMode.MaxQuality","location":"camposer/com.ujizin.camposer.state/-image-capture-mode/-max-quality/index.html","searchKeys":["MaxQuality","MaxQuality","com.ujizin.camposer.state.ImageCaptureMode.MaxQuality"]},{"name":"MinLatency","description":"com.ujizin.camposer.state.ImageCaptureMode.MinLatency","location":"camposer/com.ujizin.camposer.state/-image-capture-mode/-min-latency/index.html","searchKeys":["MinLatency","MinLatency","com.ujizin.camposer.state.ImageCaptureMode.MinLatency"]},{"name":"Off","description":"com.ujizin.camposer.state.FlashMode.Off","location":"camposer/com.ujizin.camposer.state/-flash-mode/-off/index.html","searchKeys":["Off","Off","com.ujizin.camposer.state.FlashMode.Off"]},{"name":"On","description":"com.ujizin.camposer.state.FlashMode.On","location":"camposer/com.ujizin.camposer.state/-flash-mode/-on/index.html","searchKeys":["On","On","com.ujizin.camposer.state.FlashMode.On"]},{"name":"Performance","description":"com.ujizin.camposer.state.ImplementationMode.Performance","location":"camposer/com.ujizin.camposer.state/-implementation-mode/-performance/index.html","searchKeys":["Performance","Performance","com.ujizin.camposer.state.ImplementationMode.Performance"]},{"name":"Video","description":"com.ujizin.camposer.state.CaptureMode.Video","location":"camposer/com.ujizin.camposer.state/-capture-mode/-video/index.html","searchKeys":["Video","Video","com.ujizin.camposer.state.CaptureMode.Video"]},{"name":"ZeroShutterLag","description":"com.ujizin.camposer.state.ImageCaptureMode.ZeroShutterLag","location":"camposer/com.ujizin.camposer.state/-image-capture-mode/-zero-shutter-lag/index.html","searchKeys":["ZeroShutterLag","ZeroShutterLag","com.ujizin.camposer.state.ImageCaptureMode.ZeroShutterLag"]},{"name":"class CameraState(context: Context)","description":"com.ujizin.camposer.state.CameraState","location":"camposer/com.ujizin.camposer.state/-camera-state/index.html","searchKeys":["CameraState","class CameraState(context: Context)","com.ujizin.camposer.state.CameraState"]},{"name":"class ImageAnalyzer(cameraState: CameraState, imageAnalysisBackpressureStrategy: ImageAnalysisBackpressureStrategy, imageAnalysisTargetSize: ImageTargetSize?, imageAnalysisImageQueueDepth: Int, analyzer: ImageAnalysis.Analyzer)","description":"com.ujizin.camposer.state.ImageAnalyzer","location":"camposer/com.ujizin.camposer.state/-image-analyzer/index.html","searchKeys":["ImageAnalyzer","class ImageAnalyzer(cameraState: CameraState, imageAnalysisBackpressureStrategy: ImageAnalysisBackpressureStrategy, imageAnalysisTargetSize: ImageTargetSize?, imageAnalysisImageQueueDepth: Int, analyzer: ImageAnalysis.Analyzer)","com.ujizin.camposer.state.ImageAnalyzer"]},{"name":"constructor(aspectRatio: Int? = null, size: Size? = null, outputSize: CameraController.OutputSize? = null)","description":"com.ujizin.camposer.state.ImageTargetSize.ImageTargetSize","location":"camposer/com.ujizin.camposer.state/-image-target-size/-image-target-size.html","searchKeys":["ImageTargetSize","constructor(aspectRatio: Int? = null, size: Size? = null, outputSize: CameraController.OutputSize? = null)","com.ujizin.camposer.state.ImageTargetSize.ImageTargetSize"]},{"name":"constructor(aspectRatio: Int?)","description":"com.ujizin.camposer.state.ImageTargetSize.ImageTargetSize","location":"camposer/com.ujizin.camposer.state/-image-target-size/-image-target-size.html","searchKeys":["ImageTargetSize","constructor(aspectRatio: Int?)","com.ujizin.camposer.state.ImageTargetSize.ImageTargetSize"]},{"name":"constructor(cameraState: CameraState, imageAnalysisBackpressureStrategy: ImageAnalysisBackpressureStrategy, imageAnalysisTargetSize: ImageTargetSize?, imageAnalysisImageQueueDepth: Int, analyzer: ImageAnalysis.Analyzer)","description":"com.ujizin.camposer.state.ImageAnalyzer.ImageAnalyzer","location":"camposer/com.ujizin.camposer.state/-image-analyzer/-image-analyzer.html","searchKeys":["ImageAnalyzer","constructor(cameraState: CameraState, imageAnalysisBackpressureStrategy: ImageAnalysisBackpressureStrategy, imageAnalysisTargetSize: ImageTargetSize?, imageAnalysisImageQueueDepth: Int, analyzer: ImageAnalysis.Analyzer)","com.ujizin.camposer.state.ImageAnalyzer.ImageAnalyzer"]},{"name":"constructor(context: Context)","description":"com.ujizin.camposer.state.CameraState.CameraState","location":"camposer/com.ujizin.camposer.state/-camera-state/-camera-state.html","searchKeys":["CameraState","constructor(context: Context)","com.ujizin.camposer.state.CameraState.CameraState"]},{"name":"constructor(savedUri: Uri?)","description":"com.ujizin.camposer.state.ImageCaptureResult.Success.Success","location":"camposer/com.ujizin.camposer.state/-image-capture-result/-success/-success.html","searchKeys":["Success","constructor(savedUri: Uri?)","com.ujizin.camposer.state.ImageCaptureResult.Success.Success"]},{"name":"constructor(savedUri: Uri?)","description":"com.ujizin.camposer.state.VideoCaptureResult.Success.Success","location":"camposer/com.ujizin.camposer.state/-video-capture-result/-success/-success.html","searchKeys":["Success","constructor(savedUri: Uri?)","com.ujizin.camposer.state.VideoCaptureResult.Success.Success"]},{"name":"constructor(size: Size?)","description":"com.ujizin.camposer.state.ImageTargetSize.ImageTargetSize","location":"camposer/com.ujizin.camposer.state/-image-target-size/-image-target-size.html","searchKeys":["ImageTargetSize","constructor(size: Size?)","com.ujizin.camposer.state.ImageTargetSize.ImageTargetSize"]},{"name":"constructor(throwable: Throwable)","description":"com.ujizin.camposer.state.ImageCaptureResult.Error.Error","location":"camposer/com.ujizin.camposer.state/-image-capture-result/-error/-error.html","searchKeys":["Error","constructor(throwable: Throwable)","com.ujizin.camposer.state.ImageCaptureResult.Error.Error"]},{"name":"constructor(videoCaptureError: Int, message: String, throwable: Throwable?)","description":"com.ujizin.camposer.state.VideoCaptureResult.Error.Error","location":"camposer/com.ujizin.camposer.state/-video-capture-result/-error/-error.html","searchKeys":["Error","constructor(videoCaptureError: Int, message: String, throwable: Throwable?)","com.ujizin.camposer.state.VideoCaptureResult.Error.Error"]},{"name":"data class Error(val throwable: Throwable) : ImageCaptureResult","description":"com.ujizin.camposer.state.ImageCaptureResult.Error","location":"camposer/com.ujizin.camposer.state/-image-capture-result/-error/index.html","searchKeys":["Error","data class Error(val throwable: Throwable) : ImageCaptureResult","com.ujizin.camposer.state.ImageCaptureResult.Error"]},{"name":"data class Error(val videoCaptureError: Int, val message: String, val throwable: Throwable?) : VideoCaptureResult","description":"com.ujizin.camposer.state.VideoCaptureResult.Error","location":"camposer/com.ujizin.camposer.state/-video-capture-result/-error/index.html","searchKeys":["Error","data class Error(val videoCaptureError: Int, val message: String, val throwable: Throwable?) : VideoCaptureResult","com.ujizin.camposer.state.VideoCaptureResult.Error"]},{"name":"data class ImageTargetSize(aspectRatio: Int? = null, size: Size? = null, outputSize: CameraController.OutputSize? = null)","description":"com.ujizin.camposer.state.ImageTargetSize","location":"camposer/com.ujizin.camposer.state/-image-target-size/index.html","searchKeys":["ImageTargetSize","data class ImageTargetSize(aspectRatio: Int? = null, size: Size? = null, outputSize: CameraController.OutputSize? = null)","com.ujizin.camposer.state.ImageTargetSize"]},{"name":"data class Success(val savedUri: Uri?) : ImageCaptureResult","description":"com.ujizin.camposer.state.ImageCaptureResult.Success","location":"camposer/com.ujizin.camposer.state/-image-capture-result/-success/index.html","searchKeys":["Success","data class Success(val savedUri: Uri?) : ImageCaptureResult","com.ujizin.camposer.state.ImageCaptureResult.Success"]},{"name":"data class Success(val savedUri: Uri?) : VideoCaptureResult","description":"com.ujizin.camposer.state.VideoCaptureResult.Success","location":"camposer/com.ujizin.camposer.state/-video-capture-result/-success/index.html","searchKeys":["Success","data class Success(val savedUri: Uri?) : VideoCaptureResult","com.ujizin.camposer.state.VideoCaptureResult.Success"]},{"name":"enum CamSelector : Enum<CamSelector> ","description":"com.ujizin.camposer.state.CamSelector","location":"camposer/com.ujizin.camposer.state/-cam-selector/index.html","searchKeys":["CamSelector","enum CamSelector : Enum<CamSelector> ","com.ujizin.camposer.state.CamSelector"]},{"name":"enum CaptureMode : Enum<CaptureMode> ","description":"com.ujizin.camposer.state.CaptureMode","location":"camposer/com.ujizin.camposer.state/-capture-mode/index.html","searchKeys":["CaptureMode","enum CaptureMode : Enum<CaptureMode> ","com.ujizin.camposer.state.CaptureMode"]},{"name":"enum FlashMode : Enum<FlashMode> ","description":"com.ujizin.camposer.state.FlashMode","location":"camposer/com.ujizin.camposer.state/-flash-mode/index.html","searchKeys":["FlashMode","enum FlashMode : Enum<FlashMode> ","com.ujizin.camposer.state.FlashMode"]},{"name":"enum ImageAnalysisBackpressureStrategy : Enum<ImageAnalysisBackpressureStrategy> ","description":"com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy","location":"camposer/com.ujizin.camposer.state/-image-analysis-backpressure-strategy/index.html","searchKeys":["ImageAnalysisBackpressureStrategy","enum ImageAnalysisBackpressureStrategy : Enum<ImageAnalysisBackpressureStrategy> ","com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy"]},{"name":"enum ImageCaptureMode : Enum<ImageCaptureMode> ","description":"com.ujizin.camposer.state.ImageCaptureMode","location":"camposer/com.ujizin.camposer.state/-image-capture-mode/index.html","searchKeys":["ImageCaptureMode","enum ImageCaptureMode : Enum<ImageCaptureMode> ","com.ujizin.camposer.state.ImageCaptureMode"]},{"name":"enum ImplementationMode : Enum<ImplementationMode> ","description":"com.ujizin.camposer.state.ImplementationMode","location":"camposer/com.ujizin.camposer.state/-implementation-mode/index.html","searchKeys":["ImplementationMode","enum ImplementationMode : Enum<ImplementationMode> ","com.ujizin.camposer.state.ImplementationMode"]},{"name":"enum ScaleType : Enum<ScaleType> ","description":"com.ujizin.camposer.state.ScaleType","location":"camposer/com.ujizin.camposer.state/-scale-type/index.html","searchKeys":["ScaleType","enum ScaleType : Enum<ScaleType> ","com.ujizin.camposer.state.ScaleType"]},{"name":"fun CameraPreview(modifier: Modifier = Modifier, cameraState: CameraState = rememberCameraState(), camSelector: CamSelector = cameraState.camSelector, captureMode: CaptureMode = cameraState.captureMode, imageCaptureMode: ImageCaptureMode = cameraState.imageCaptureMode, imageCaptureTargetSize: ImageTargetSize? = cameraState.imageCaptureTargetSize, flashMode: FlashMode = cameraState.flashMode, scaleType: ScaleType = cameraState.scaleType, enableTorch: Boolean = cameraState.enableTorch, exposureCompensation: Int = cameraState.initialExposure, zoomRatio: Float = 1.0f, imageAnalyzer: ImageAnalyzer? = null, implementationMode: ImplementationMode = cameraState.implementationMode, isImageAnalysisEnabled: Boolean = cameraState.isImageAnalysisEnabled, isFocusOnTapEnabled: Boolean = cameraState.isFocusOnTapEnabled, isPinchToZoomEnabled: Boolean = cameraState.isZoomSupported, onPreviewStreamChanged: () -> Unit = {}, onSwitchToFront: (Bitmap) -> Unit = {}, onSwitchToBack: (Bitmap) -> Unit = {}, onFocus: suspend (onComplete: () -> Unit) -> Unit = { onComplete ->\n        delay(1000L)\n        onComplete()\n    }, onZoomRatioChanged: (Float) -> Unit = {}, focusTapContent: () -> Unit = { SquareCornerFocus() }, content: () -> Unit = {})","description":"com.ujizin.camposer.CameraPreview","location":"camposer/com.ujizin.camposer/-camera-preview.html","searchKeys":["CameraPreview","fun CameraPreview(modifier: Modifier = Modifier, cameraState: CameraState = rememberCameraState(), camSelector: CamSelector = cameraState.camSelector, captureMode: CaptureMode = cameraState.captureMode, imageCaptureMode: ImageCaptureMode = cameraState.imageCaptureMode, imageCaptureTargetSize: ImageTargetSize? = cameraState.imageCaptureTargetSize, flashMode: FlashMode = cameraState.flashMode, scaleType: ScaleType = cameraState.scaleType, enableTorch: Boolean = cameraState.enableTorch, exposureCompensation: Int = cameraState.initialExposure, zoomRatio: Float = 1.0f, imageAnalyzer: ImageAnalyzer? = null, implementationMode: ImplementationMode = cameraState.implementationMode, isImageAnalysisEnabled: Boolean = cameraState.isImageAnalysisEnabled, isFocusOnTapEnabled: Boolean = cameraState.isFocusOnTapEnabled, isPinchToZoomEnabled: Boolean = cameraState.isZoomSupported, onPreviewStreamChanged: () -> Unit = {}, onSwitchToFront: (Bitmap) -> Unit = {}, onSwitchToBack: (Bitmap) -> Unit = {}, onFocus: suspend (onComplete: () -> Unit) -> Unit = { onComplete ->\n        delay(1000L)\n        onComplete()\n    }, onZoomRatioChanged: (Float) -> Unit = {}, focusTapContent: () -> Unit = { SquareCornerFocus() }, content: () -> Unit = {})","com.ujizin.camposer.CameraPreview"]},{"name":"fun CameraState.rememberFlashMode(initialFlashMode: FlashMode = FlashMode.Off, useSaver: Boolean = true): MutableState<FlashMode>","description":"com.ujizin.camposer.state.rememberFlashMode","location":"camposer/com.ujizin.camposer.state/remember-flash-mode.html","searchKeys":["rememberFlashMode","fun CameraState.rememberFlashMode(initialFlashMode: FlashMode = FlashMode.Off, useSaver: Boolean = true): MutableState<FlashMode>","com.ujizin.camposer.state.rememberFlashMode"]},{"name":"fun CameraState.rememberImageAnalyzer(imageAnalysisBackpressureStrategy: ImageAnalysisBackpressureStrategy = ImageAnalysisBackpressureStrategy.KeepOnlyLatest, imageAnalysisTargetSize: ImageTargetSize? = ImageTargetSize(this.imageAnalysisTargetSize), imageAnalysisImageQueueDepth: Int = this.imageAnalysisImageQueueDepth, analyze: ImageAnalysis.Analyzer): ImageAnalyzer","description":"com.ujizin.camposer.state.rememberImageAnalyzer","location":"camposer/com.ujizin.camposer.state/remember-image-analyzer.html","searchKeys":["rememberImageAnalyzer","fun CameraState.rememberImageAnalyzer(imageAnalysisBackpressureStrategy: ImageAnalysisBackpressureStrategy = ImageAnalysisBackpressureStrategy.KeepOnlyLatest, imageAnalysisTargetSize: ImageTargetSize? = ImageTargetSize(this.imageAnalysisTargetSize), imageAnalysisImageQueueDepth: Int = this.imageAnalysisImageQueueDepth, analyze: ImageAnalysis.Analyzer): ImageAnalyzer","com.ujizin.camposer.state.rememberImageAnalyzer"]},{"name":"fun CameraState.rememberTorch(initialTorch: Boolean = false, useSaver: Boolean = true): MutableState<Boolean>","description":"com.ujizin.camposer.state.rememberTorch","location":"camposer/com.ujizin.camposer.state/remember-torch.html","searchKeys":["rememberTorch","fun CameraState.rememberTorch(initialTorch: Boolean = false, useSaver: Boolean = true): MutableState<Boolean>","com.ujizin.camposer.state.rememberTorch"]},{"name":"fun CircleFocus(modifier: Modifier = Modifier, tapSize: Dp = DefaultFocusSize, borderStroke: BorderStroke = DefaultBorderStroke)","description":"com.ujizin.camposer.focus.CircleFocus","location":"camposer/com.ujizin.camposer.focus/-circle-focus.html","searchKeys":["CircleFocus","fun CircleFocus(modifier: Modifier = Modifier, tapSize: Dp = DefaultFocusSize, borderStroke: BorderStroke = DefaultBorderStroke)","com.ujizin.camposer.focus.CircleFocus"]},{"name":"fun SquareCornerFocus(modifier: Modifier = Modifier, tapSize: Dp = DefaultFocusSize, borderSize: Dp = Dp.Unspecified, borderStroke: BorderStroke = DefaultBorderStroke)","description":"com.ujizin.camposer.focus.SquareCornerFocus","location":"camposer/com.ujizin.camposer.focus/-square-corner-focus.html","searchKeys":["SquareCornerFocus","fun SquareCornerFocus(modifier: Modifier = Modifier, tapSize: Dp = DefaultFocusSize, borderSize: Dp = Dp.Unspecified, borderStroke: BorderStroke = DefaultBorderStroke)","com.ujizin.camposer.focus.SquareCornerFocus"]},{"name":"fun SquareFocus(modifier: Modifier = Modifier, tapSize: Dp = DefaultFocusSize, borderStroke: BorderStroke = DefaultBorderStroke)","description":"com.ujizin.camposer.focus.SquareFocus","location":"camposer/com.ujizin.camposer.focus/-square-focus.html","searchKeys":["SquareFocus","fun SquareFocus(modifier: Modifier = Modifier, tapSize: Dp = DefaultFocusSize, borderStroke: BorderStroke = DefaultBorderStroke)","com.ujizin.camposer.focus.SquareFocus"]},{"name":"fun hasCamera(cameraSelector: CamSelector): Boolean","description":"com.ujizin.camposer.state.CameraState.hasCamera","location":"camposer/com.ujizin.camposer.state/-camera-state/has-camera.html","searchKeys":["hasCamera","fun hasCamera(cameraSelector: CamSelector): Boolean","com.ujizin.camposer.state.CameraState.hasCamera"]},{"name":"fun rememberCamSelector(selector: CamSelector = CamSelector.Back): MutableState<CamSelector>","description":"com.ujizin.camposer.state.rememberCamSelector","location":"camposer/com.ujizin.camposer.state/remember-cam-selector.html","searchKeys":["rememberCamSelector","fun rememberCamSelector(selector: CamSelector = CamSelector.Back): MutableState<CamSelector>","com.ujizin.camposer.state.rememberCamSelector"]},{"name":"fun rememberCameraState(): CameraState","description":"com.ujizin.camposer.state.rememberCameraState","location":"camposer/com.ujizin.camposer.state/remember-camera-state.html","searchKeys":["rememberCameraState","fun rememberCameraState(): CameraState","com.ujizin.camposer.state.rememberCameraState"]},{"name":"fun startRecording(file: File, onResult: (VideoCaptureResult) -> Unit)","description":"com.ujizin.camposer.state.CameraState.startRecording","location":"camposer/com.ujizin.camposer.state/-camera-state/start-recording.html","searchKeys":["startRecording","fun startRecording(file: File, onResult: (VideoCaptureResult) -> Unit)","com.ujizin.camposer.state.CameraState.startRecording"]},{"name":"fun startRecording(outputFileOptions: OutputFileOptions, onResult: (VideoCaptureResult) -> Unit)","description":"com.ujizin.camposer.state.CameraState.startRecording","location":"camposer/com.ujizin.camposer.state/-camera-state/start-recording.html","searchKeys":["startRecording","fun startRecording(outputFileOptions: OutputFileOptions, onResult: (VideoCaptureResult) -> Unit)","com.ujizin.camposer.state.CameraState.startRecording"]},{"name":"fun startRecording(saveCollection: Uri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI, contentValues: ContentValues, onResult: (VideoCaptureResult) -> Unit)","description":"com.ujizin.camposer.state.CameraState.startRecording","location":"camposer/com.ujizin.camposer.state/-camera-state/start-recording.html","searchKeys":["startRecording","fun startRecording(saveCollection: Uri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI, contentValues: ContentValues, onResult: (VideoCaptureResult) -> Unit)","com.ujizin.camposer.state.CameraState.startRecording"]},{"name":"fun stopRecording()","description":"com.ujizin.camposer.state.CameraState.stopRecording","location":"camposer/com.ujizin.camposer.state/-camera-state/stop-recording.html","searchKeys":["stopRecording","fun stopRecording()","com.ujizin.camposer.state.CameraState.stopRecording"]},{"name":"fun takePicture(contentValues: ContentValues, saveCollection: Uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI, onResult: (ImageCaptureResult) -> Unit)","description":"com.ujizin.camposer.state.CameraState.takePicture","location":"camposer/com.ujizin.camposer.state/-camera-state/take-picture.html","searchKeys":["takePicture","fun takePicture(contentValues: ContentValues, saveCollection: Uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI, onResult: (ImageCaptureResult) -> Unit)","com.ujizin.camposer.state.CameraState.takePicture"]},{"name":"fun takePicture(file: File, onResult: (ImageCaptureResult) -> Unit)","description":"com.ujizin.camposer.state.CameraState.takePicture","location":"camposer/com.ujizin.camposer.state/-camera-state/take-picture.html","searchKeys":["takePicture","fun takePicture(file: File, onResult: (ImageCaptureResult) -> Unit)","com.ujizin.camposer.state.CameraState.takePicture"]},{"name":"fun takePicture(outputFileOptions: ImageCapture.OutputFileOptions, onResult: (ImageCaptureResult) -> Unit)","description":"com.ujizin.camposer.state.CameraState.takePicture","location":"camposer/com.ujizin.camposer.state/-camera-state/take-picture.html","searchKeys":["takePicture","fun takePicture(outputFileOptions: ImageCapture.OutputFileOptions, onResult: (ImageCaptureResult) -> Unit)","com.ujizin.camposer.state.CameraState.takePicture"]},{"name":"fun toggleRecording(contentValues: ContentValues, saveCollection: Uri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI, onResult: (VideoCaptureResult) -> Unit)","description":"com.ujizin.camposer.state.CameraState.toggleRecording","location":"camposer/com.ujizin.camposer.state/-camera-state/toggle-recording.html","searchKeys":["toggleRecording","fun toggleRecording(contentValues: ContentValues, saveCollection: Uri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI, onResult: (VideoCaptureResult) -> Unit)","com.ujizin.camposer.state.CameraState.toggleRecording"]},{"name":"fun toggleRecording(file: File, onResult: (VideoCaptureResult) -> Unit)","description":"com.ujizin.camposer.state.CameraState.toggleRecording","location":"camposer/com.ujizin.camposer.state/-camera-state/toggle-recording.html","searchKeys":["toggleRecording","fun toggleRecording(file: File, onResult: (VideoCaptureResult) -> Unit)","com.ujizin.camposer.state.CameraState.toggleRecording"]},{"name":"fun toggleRecording(outputFileOptions: OutputFileOptions, onResult: (VideoCaptureResult) -> Unit)","description":"com.ujizin.camposer.state.CameraState.toggleRecording","location":"camposer/com.ujizin.camposer.state/-camera-state/toggle-recording.html","searchKeys":["toggleRecording","fun toggleRecording(outputFileOptions: OutputFileOptions, onResult: (VideoCaptureResult) -> Unit)","com.ujizin.camposer.state.CameraState.toggleRecording"]},{"name":"fun update(imageAnalysisBackpressureStrategy: ImageAnalysisBackpressureStrategy = ImageAnalysisBackpressureStrategy.find(\n            cameraState.imageAnalysisBackpressureStrategy\n        ), imageAnalysisTargetSize: ImageTargetSize? = ImageTargetSize(cameraState.imageAnalysisTargetSize), imageAnalysisImageQueueDepth: Int = cameraState.imageAnalysisImageQueueDepth, analyzer: ImageAnalysis.Analyzer = this.analyzer)","description":"com.ujizin.camposer.state.ImageAnalyzer.update","location":"camposer/com.ujizin.camposer.state/-image-analyzer/update.html","searchKeys":["update","fun update(imageAnalysisBackpressureStrategy: ImageAnalysisBackpressureStrategy = ImageAnalysisBackpressureStrategy.find(\n            cameraState.imageAnalysisBackpressureStrategy\n        ), imageAnalysisTargetSize: ImageTargetSize? = ImageTargetSize(cameraState.imageAnalysisTargetSize), imageAnalysisImageQueueDepth: Int = cameraState.imageAnalysisImageQueueDepth, analyzer: ImageAnalysis.Analyzer = this.analyzer)","com.ujizin.camposer.state.ImageAnalyzer.update"]},{"name":"fun valueOf(value: String): CamSelector","description":"com.ujizin.camposer.state.CamSelector.valueOf","location":"camposer/com.ujizin.camposer.state/-cam-selector/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CamSelector","com.ujizin.camposer.state.CamSelector.valueOf"]},{"name":"fun valueOf(value: String): CaptureMode","description":"com.ujizin.camposer.state.CaptureMode.valueOf","location":"camposer/com.ujizin.camposer.state/-capture-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CaptureMode","com.ujizin.camposer.state.CaptureMode.valueOf"]},{"name":"fun valueOf(value: String): FlashMode","description":"com.ujizin.camposer.state.FlashMode.valueOf","location":"camposer/com.ujizin.camposer.state/-flash-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FlashMode","com.ujizin.camposer.state.FlashMode.valueOf"]},{"name":"fun valueOf(value: String): ImageAnalysisBackpressureStrategy","description":"com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy.valueOf","location":"camposer/com.ujizin.camposer.state/-image-analysis-backpressure-strategy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ImageAnalysisBackpressureStrategy","com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy.valueOf"]},{"name":"fun valueOf(value: String): ImageCaptureMode","description":"com.ujizin.camposer.state.ImageCaptureMode.valueOf","location":"camposer/com.ujizin.camposer.state/-image-capture-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ImageCaptureMode","com.ujizin.camposer.state.ImageCaptureMode.valueOf"]},{"name":"fun valueOf(value: String): ImplementationMode","description":"com.ujizin.camposer.state.ImplementationMode.valueOf","location":"camposer/com.ujizin.camposer.state/-implementation-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ImplementationMode","com.ujizin.camposer.state.ImplementationMode.valueOf"]},{"name":"fun valueOf(value: String): ScaleType","description":"com.ujizin.camposer.state.ScaleType.valueOf","location":"camposer/com.ujizin.camposer.state/-scale-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ScaleType","com.ujizin.camposer.state.ScaleType.valueOf"]},{"name":"fun values(): Array<CamSelector>","description":"com.ujizin.camposer.state.CamSelector.values","location":"camposer/com.ujizin.camposer.state/-cam-selector/values.html","searchKeys":["values","fun values(): Array<CamSelector>","com.ujizin.camposer.state.CamSelector.values"]},{"name":"fun values(): Array<CaptureMode>","description":"com.ujizin.camposer.state.CaptureMode.values","location":"camposer/com.ujizin.camposer.state/-capture-mode/values.html","searchKeys":["values","fun values(): Array<CaptureMode>","com.ujizin.camposer.state.CaptureMode.values"]},{"name":"fun values(): Array<FlashMode>","description":"com.ujizin.camposer.state.FlashMode.values","location":"camposer/com.ujizin.camposer.state/-flash-mode/values.html","searchKeys":["values","fun values(): Array<FlashMode>","com.ujizin.camposer.state.FlashMode.values"]},{"name":"fun values(): Array<ImageAnalysisBackpressureStrategy>","description":"com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy.values","location":"camposer/com.ujizin.camposer.state/-image-analysis-backpressure-strategy/values.html","searchKeys":["values","fun values(): Array<ImageAnalysisBackpressureStrategy>","com.ujizin.camposer.state.ImageAnalysisBackpressureStrategy.values"]},{"name":"fun values(): Array<ImageCaptureMode>","description":"com.ujizin.camposer.state.ImageCaptureMode.values","location":"camposer/com.ujizin.camposer.state/-image-capture-mode/values.html","searchKeys":["values","fun values(): Array<ImageCaptureMode>","com.ujizin.camposer.state.ImageCaptureMode.values"]},{"name":"fun values(): Array<ImplementationMode>","description":"com.ujizin.camposer.state.ImplementationMode.values","location":"camposer/com.ujizin.camposer.state/-implementation-mode/values.html","searchKeys":["values","fun values(): Array<ImplementationMode>","com.ujizin.camposer.state.ImplementationMode.values"]},{"name":"fun values(): Array<ScaleType>","description":"com.ujizin.camposer.state.ScaleType.values","location":"camposer/com.ujizin.camposer.state/-scale-type/values.html","searchKeys":["values","fun values(): Array<ScaleType>","com.ujizin.camposer.state.ScaleType.values"]},{"name":"interface ImageCaptureResult","description":"com.ujizin.camposer.state.ImageCaptureResult","location":"camposer/com.ujizin.camposer.state/-image-capture-result/index.html","searchKeys":["ImageCaptureResult","interface ImageCaptureResult","com.ujizin.camposer.state.ImageCaptureResult"]},{"name":"interface VideoCaptureResult","description":"com.ujizin.camposer.state.VideoCaptureResult","location":"camposer/com.ujizin.camposer.state/-video-capture-result/index.html","searchKeys":["VideoCaptureResult","interface VideoCaptureResult","com.ujizin.camposer.state.VideoCaptureResult"]},{"name":"suspend fun CameraState.takePicture(contentValues: ContentValues, saveCollection: Uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI): Uri?","description":"com.ujizin.camposer.extensions.takePicture","location":"camposer/com.ujizin.camposer.extensions/take-picture.html","searchKeys":["takePicture","suspend fun CameraState.takePicture(contentValues: ContentValues, saveCollection: Uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI): Uri?","com.ujizin.camposer.extensions.takePicture"]},{"name":"suspend fun CameraState.takePicture(file: File): Uri?","description":"com.ujizin.camposer.extensions.takePicture","location":"camposer/com.ujizin.camposer.extensions/take-picture.html","searchKeys":["takePicture","suspend fun CameraState.takePicture(file: File): Uri?","com.ujizin.camposer.extensions.takePicture"]},{"name":"suspend fun CameraState.takePicture(outputFileOptions: ImageCapture.OutputFileOptions): Uri?","description":"com.ujizin.camposer.extensions.takePicture","location":"camposer/com.ujizin.camposer.extensions/take-picture.html","searchKeys":["takePicture","suspend fun CameraState.takePicture(outputFileOptions: ImageCapture.OutputFileOptions): Uri?","com.ujizin.camposer.extensions.takePicture"]},{"name":"suspend fun CameraState.toggleRecording(contentValues: ContentValues, saveCollection: Uri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI): Uri?","description":"com.ujizin.camposer.extensions.toggleRecording","location":"camposer/com.ujizin.camposer.extensions/toggle-recording.html","searchKeys":["toggleRecording","suspend fun CameraState.toggleRecording(contentValues: ContentValues, saveCollection: Uri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI): Uri?","com.ujizin.camposer.extensions.toggleRecording"]},{"name":"suspend fun CameraState.toggleRecording(file: File): Uri?","description":"com.ujizin.camposer.extensions.toggleRecording","location":"camposer/com.ujizin.camposer.extensions/toggle-recording.html","searchKeys":["toggleRecording","suspend fun CameraState.toggleRecording(file: File): Uri?","com.ujizin.camposer.extensions.toggleRecording"]},{"name":"suspend fun CameraState.toggleRecording(outputFileOptions: OutputFileOptions): Uri?","description":"com.ujizin.camposer.extensions.toggleRecording","location":"camposer/com.ujizin.camposer.extensions/toggle-recording.html","searchKeys":["toggleRecording","suspend fun CameraState.toggleRecording(outputFileOptions: OutputFileOptions): Uri?","com.ujizin.camposer.extensions.toggleRecording"]},{"name":"val controller: LifecycleCameraController","description":"com.ujizin.camposer.state.CameraState.controller","location":"camposer/com.ujizin.camposer.state/-camera-state/controller.html","searchKeys":["controller","val controller: LifecycleCameraController","com.ujizin.camposer.state.CameraState.controller"]},{"name":"val initialExposure: Int","description":"com.ujizin.camposer.state.CameraState.initialExposure","location":"camposer/com.ujizin.camposer.state/-camera-state/initial-exposure.html","searchKeys":["initialExposure","val initialExposure: Int","com.ujizin.camposer.state.CameraState.initialExposure"]},{"name":"val inverse: CamSelector","description":"com.ujizin.camposer.state.CamSelector.inverse","location":"camposer/com.ujizin.camposer.state/-cam-selector/inverse.html","searchKeys":["inverse","val inverse: CamSelector","com.ujizin.camposer.state.CamSelector.inverse"]},{"name":"val inverse: FlashMode","description":"com.ujizin.camposer.state.FlashMode.inverse","location":"camposer/com.ujizin.camposer.state/-flash-mode/inverse.html","searchKeys":["inverse","val inverse: FlashMode","com.ujizin.camposer.state.FlashMode.inverse"]},{"name":"val inverse: ImplementationMode","description":"com.ujizin.camposer.state.ImplementationMode.inverse","location":"camposer/com.ujizin.camposer.state/-implementation-mode/inverse.html","searchKeys":["inverse","val inverse: ImplementationMode","com.ujizin.camposer.state.ImplementationMode.inverse"]},{"name":"val isExposureSupported: Boolean","description":"com.ujizin.camposer.state.CameraState.isExposureSupported","location":"camposer/com.ujizin.camposer.state/-camera-state/is-exposure-supported.html","searchKeys":["isExposureSupported","val isExposureSupported: Boolean","com.ujizin.camposer.state.CameraState.isExposureSupported"]},{"name":"val isZoomSupported: Boolean","description":"com.ujizin.camposer.state.CameraState.isZoomSupported","location":"camposer/com.ujizin.camposer.state/-camera-state/is-zoom-supported.html","searchKeys":["isZoomSupported","val isZoomSupported: Boolean","com.ujizin.camposer.state.CameraState.isZoomSupported"]},{"name":"val message: String","description":"com.ujizin.camposer.state.VideoCaptureResult.Error.message","location":"camposer/com.ujizin.camposer.state/-video-capture-result/-error/message.html","searchKeys":["message","val message: String","com.ujizin.camposer.state.VideoCaptureResult.Error.message"]},{"name":"val savedUri: Uri?","description":"com.ujizin.camposer.state.ImageCaptureResult.Success.savedUri","location":"camposer/com.ujizin.camposer.state/-image-capture-result/-success/saved-uri.html","searchKeys":["savedUri","val savedUri: Uri?","com.ujizin.camposer.state.ImageCaptureResult.Success.savedUri"]},{"name":"val savedUri: Uri?","description":"com.ujizin.camposer.state.VideoCaptureResult.Success.savedUri","location":"camposer/com.ujizin.camposer.state/-video-capture-result/-success/saved-uri.html","searchKeys":["savedUri","val savedUri: Uri?","com.ujizin.camposer.state.VideoCaptureResult.Success.savedUri"]},{"name":"val throwable: Throwable","description":"com.ujizin.camposer.state.ImageCaptureResult.Error.throwable","location":"camposer/com.ujizin.camposer.state/-image-capture-result/-error/throwable.html","searchKeys":["throwable","val throwable: Throwable","com.ujizin.camposer.state.ImageCaptureResult.Error.throwable"]},{"name":"val throwable: Throwable?","description":"com.ujizin.camposer.state.VideoCaptureResult.Error.throwable","location":"camposer/com.ujizin.camposer.state/-video-capture-result/-error/throwable.html","searchKeys":["throwable","val throwable: Throwable?","com.ujizin.camposer.state.VideoCaptureResult.Error.throwable"]},{"name":"val type: PreviewView.ScaleType","description":"com.ujizin.camposer.state.ScaleType.type","location":"camposer/com.ujizin.camposer.state/-scale-type/type.html","searchKeys":["type","val type: PreviewView.ScaleType","com.ujizin.camposer.state.ScaleType.type"]},{"name":"val videoCaptureError: Int","description":"com.ujizin.camposer.state.VideoCaptureResult.Error.videoCaptureError","location":"camposer/com.ujizin.camposer.state/-video-capture-result/-error/video-capture-error.html","searchKeys":["videoCaptureError","val videoCaptureError: Int","com.ujizin.camposer.state.VideoCaptureResult.Error.videoCaptureError"]},{"name":"var hasFlashUnit: Boolean","description":"com.ujizin.camposer.state.CameraState.hasFlashUnit","location":"camposer/com.ujizin.camposer.state/-camera-state/has-flash-unit.html","searchKeys":["hasFlashUnit","var hasFlashUnit: Boolean","com.ujizin.camposer.state.CameraState.hasFlashUnit"]},{"name":"var isFocusOnTapSupported: Boolean","description":"com.ujizin.camposer.state.CameraState.isFocusOnTapSupported","location":"camposer/com.ujizin.camposer.state/-camera-state/is-focus-on-tap-supported.html","searchKeys":["isFocusOnTapSupported","var isFocusOnTapSupported: Boolean","com.ujizin.camposer.state.CameraState.isFocusOnTapSupported"]},{"name":"var isInitialized: Boolean","description":"com.ujizin.camposer.state.CameraState.isInitialized","location":"camposer/com.ujizin.camposer.state/-camera-state/is-initialized.html","searchKeys":["isInitialized","var isInitialized: Boolean","com.ujizin.camposer.state.CameraState.isInitialized"]},{"name":"var isRecording: Boolean","description":"com.ujizin.camposer.state.CameraState.isRecording","location":"camposer/com.ujizin.camposer.state/-camera-state/is-recording.html","searchKeys":["isRecording","var isRecording: Boolean","com.ujizin.camposer.state.CameraState.isRecording"]},{"name":"var isStreaming: Boolean","description":"com.ujizin.camposer.state.CameraState.isStreaming","location":"camposer/com.ujizin.camposer.state/-camera-state/is-streaming.html","searchKeys":["isStreaming","var isStreaming: Boolean","com.ujizin.camposer.state.CameraState.isStreaming"]},{"name":"var maxExposure: Int","description":"com.ujizin.camposer.state.CameraState.maxExposure","location":"camposer/com.ujizin.camposer.state/-camera-state/max-exposure.html","searchKeys":["maxExposure","var maxExposure: Int","com.ujizin.camposer.state.CameraState.maxExposure"]},{"name":"var maxZoom: Float","description":"com.ujizin.camposer.state.CameraState.maxZoom","location":"camposer/com.ujizin.camposer.state/-camera-state/max-zoom.html","searchKeys":["maxZoom","var maxZoom: Float","com.ujizin.camposer.state.CameraState.maxZoom"]},{"name":"var minExposure: Int","description":"com.ujizin.camposer.state.CameraState.minExposure","location":"camposer/com.ujizin.camposer.state/-camera-state/min-exposure.html","searchKeys":["minExposure","var minExposure: Int","com.ujizin.camposer.state.CameraState.minExposure"]},{"name":"var minZoom: Float","description":"com.ujizin.camposer.state.CameraState.minZoom","location":"camposer/com.ujizin.camposer.state/-camera-state/min-zoom.html","searchKeys":["minZoom","var minZoom: Float","com.ujizin.camposer.state.CameraState.minZoom"]}]
